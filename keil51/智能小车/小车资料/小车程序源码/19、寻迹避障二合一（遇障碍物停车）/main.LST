C51 COMPILER V9.00   MAIN                                                                  07/26/2019 16:01:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          * 【编写时间】： 2017年06月11日
   3          * 【作    者】： 清翔电子:03
   4          * 【版    本】： 1.6
   5          * 【网    站】： http://www.qxmcu.com/ 
   6          * 【淘宝店铺】： http://qxmcu.taobao.com/ (直销店)
   7          * 【实验平台】： QX-MCS51 单片机开发板 & QX-A51智能小车
   8          * 【外部晶振】： 11.0592mhz     
   9          * 【主控芯片】： STC89C52
  10          * 【编译环境】： Keil μVisio4
  11          * ********************************【接线说明】********************************
  12                       以下"A_"表示智能小车底板~~~"B_"表示开发板     
  13          *开发板供电线  ：A_J5-VCC~~~B_VCC或5V0    A_J6-GND~~~B_GND （一共使用2根杜邦线）
  14          *电机控制线    ：A_J10-P1.2至P1.7 对应接到B_P1.2至P1.7 （一共使用6根杜邦线）
  15          *超声波模块反馈线：A_J2-P20~~~B_P20    A_J2-P21~~~B_P21 （一共使用2根杜邦线）
  16          *避障寻迹反馈线：A_J11-P3.2至P3.5 对应接到B_P3.2至P3.5 （一共使用4根杜邦线）
  17          ******************************************************************************
  18          * 【程序功能】：QX-A51智能小车寻迹避障二合一（在黑线寻迹的过程中如遇障碍物则自动掉头）                                              
             -                            
  19          * 【使用说明】：接线无误后，烧写程序打开电源开、按下S2按键后蜂鸣器发出提示音1秒后启动小车
  20          * 【注意事项】：避免小车撞向障碍物或小车轮子堵转。
  21                                          小车电压不能低于6V.
  22                                          此程序只做参考，实际运行效果需根据不同实验场地进行不同调试
  23          **********************************************************************************/
  24          #include <reg52.h>//51头文件
  25          #include <intrins.h>   //包含nop等系统函数
  26          #include <QXA51.h>//QX-A51智能小车配置文件
  27          
  28          
  29          sbit RX = P2^0;//ECHO超声波模块回响端
  30          sbit TX = P2^1;//TRIG超声波模块触发端
  31          
  32          unsigned char pwm_left_val = 150;//左电机占空比值 取值范围0-170，0最快
  33          unsigned char pwm_right_val = 150;//右电机占空比值取值范围0-170 ,0最快
  34          unsigned char pwm_t;//周期
  35          unsigned int  time = 0;//传输时间
  36          unsigned long S = 0;//距离
  37          bit      flag = 0;//超出测量范围标志位
  38          
  39          
  40          void delay(unsigned int z)//毫秒级延时
  41          {
  42   1              unsigned int x,y;
  43   1              for(x = z; x > 0; x--)
  44   1                      for(y = 114; y > 0 ; y--);
  45   1      }
  46          void Delay10us(unsigned char i)         //10us延时函数 启动超声波模块时使用
  47          { 
  48   1         unsigned char j; 
  49   1              do{ 
  50   2                      j = 10; 
  51   2                      do{ 
  52   3                              _nop_(); 
  53   3                      }while(--j); 
  54   2              }while(--i); 
C51 COMPILER V9.00   MAIN                                                                  07/26/2019 16:01:17 PAGE 2   

  55   1      }
  56          /*小车前进*/
  57          void forward()
  58          {
  59   1              left_motor_go; //左电机前进
  60   1              right_motor_go; //右电机前进
  61   1      }
  62          /*小车左转*/
  63          void left_run()
  64          {
  65   1              left_motor_stops; //左电机停止
  66   1              right_motor_go; //右电机前进    
  67   1      }
  68          /*小车右转*/
  69          void right_run()
  70          {
  71   1              right_motor_stops;//右电机停止
  72   1              left_motor_go;    //左电机前进
  73   1      }
  74          
  75          
  76          /*PWM控制使能 小车原地左转*/
  77          //void left_rapidly()
  78          //{
  79          //      left_motor_back;
  80          //      right_motor_go; 
  81          //}
  82          
  83          /*小车后退*/
  84          void backward()
  85          {
  86   1              left_motor_back; //左电机后退
  87   1              right_motor_back; //右电机后退  
  88   1      }
  89          /*小车停止*/
  90          void stop()
  91          {
  92   1              right_motor_stops;//右电机停止
  93   1              left_motor_stops; //左电机停止  
  94   1      }
  95          
  96          
  97          /*定时器1中断输出PWM信号*/
  98          void timer1() interrupt 3
  99          {
 100   1              pwm_t++;//周期计时加
 101   1              if(pwm_t == 255)
 102   1                      pwm_t = EN1 = EN2 = 0;
 103   1              if(pwm_left_val == pwm_t)//左电机占空比 
 104   1                      EN1 = 1;                
 105   1              if(pwm_right_val == pwm_t)//右电机占空比
 106   1                      EN2 = 1;                         
 107   1      }
 108          
 109          /*判断S2是否被按下*/
 110          void keyscan()
 111          {
 112   1              for(;;) //死循环
 113   1              {
 114   2                      if(key_s2 == 0)// 实时检测S2按键是否被按下
 115   2                      {
 116   3                              delay(5); //软件消抖
C51 COMPILER V9.00   MAIN                                                                  07/26/2019 16:01:17 PAGE 3   

 117   3                              if(key_s2 == 0)//再检测S2是否被按下
 118   3                              {
 119   4                                      while(!key_s2);//松手检测
 120   4                                      beep = 0;       //使能有源蜂鸣器
 121   4                                      delay(200);//200毫秒延时
 122   4                                      beep = 1;       //关闭有源蜂鸣器
 123   4                                      break;          //退出FOR死循环
 124   4                              }
 125   3                      }
 126   2              }       
 127   1      }
 128          
 129          /*定时器0中断*/
 130          void timer0() interrupt 1       //T0中断用来计数器溢出,超过测距范围
 131          {
 132   1              flag=1;                                                  //中断溢出标志                  
 133   1      }
 134          void  StartModule()                      //启动超声波模块
 135          {
 136   1                TX=1;                                      //启动一次模块
 137   1            Delay10us(2);
 138   1                TX=0;
 139   1      }
 140          
 141          /*计算超声波所测距离并显示*/
 142          void Conut()
 143          {
 144   1              time=TH0*256+TL0;
 145   1              TH0=0;
 146   1              TL0=0;
 147   1              
 148   1              S=(float)(time*1.085)*0.17;     //算出来是MM
 149   1              if((S>=5000)||flag==1) //超出测量范围
 150   1              {        
 151   2                      flag=0;
 152   2              }
 153   1      }
 154          
 155          //寻迹
 156          void tracking()
 157          {
 158   1                      //为0 没有识别到黑线 为1识别到黑线
 159   1              if(left_led1 == 1 && right_led1 == 1)//左右寻迹探头识别到黑线
 160   1              {
 161   2                      forward();//前进
 162   2              }
 163   1              else
 164   1              {
 165   2                      if(left_led1 == 1 && right_led1 == 0)//小车右边出线，左转修正
 166   2                      {
 167   3                              left_run();//左转
 168   3                      }
 169   2                      if(left_led1 == 0 && right_led1 == 1)//小车左边出线，右转修正
 170   2                      {
 171   3                              right_run();//右转
 172   3                      }
 173   2      //              if(left_led1 == 0 && right_led1 == 0)//左右寻迹探头都没识别到黑线
 174   2      //              {
 175   2      //                      backward();//后退
 176   2      //              }               
 177   2              }       
 178   1      }
C51 COMPILER V9.00   MAIN                                                                  07/26/2019 16:01:17 PAGE 4   

 179          
 180          /*超声波避障*/
 181          void    Avoid()
 182          {
 183   1              if(S < 80)//设置避障距离（单位毫米）
 184   1              {
 185   2                      beep = 0;//使能蜂鸣器
 186   2                      stop();//停车
 187   2                      delay(100);//停车时间
 188   2                      do{
 189   3                              stop();  //停车
 190   3                              delay(100);//停车时间
 191   3      
 192   3                               StartModule(); //启动模块测距
 193   3                               while(!RX);            //当RX（ECHO信号回响）为零时等待
 194   3                               TR0=1;                     //开启计数
 195   3                               while(RX);                     //当RX为1计数并等待
 196   3                               TR0=0;                         //关闭计数
 197   3                           Conut();                   //计算距离
 198   3                              }while(S < 80); //
 199   2                      beep = 1;//关闭蜂鸣器
 200   2              }
 201   1      }
 202                  
 203          void main()
 204          {
 205   1              unsigned int i;
 206   1              keyscan();//等待按键按下启动
 207   1              delay(1000);//延时1秒
 208   1              TMOD |= 0x20;//定时器1工作模式2,8位自动重装。用于产生PWM
 209   1              TMOD |= 0x01;//定时器0工作模块1,16位定时模式。T0用测ECH0脉冲长度
 210   1              TH1 = 220; //
 211   1              TL1 = 220; //100HZ T1
 212   1              TH0     = 0;
 213   1          TL0 = 0;//T0,16位定时计数用于记录ECHO高电平时间         
 214   1          ET1 = 1;//允许T1中断
 215   1              ET0 = 1;//允许T0中断
 216   1              TR1 = 1;//启动定时器1
 217   1              EA  = 1;//启动总中断
 218   1              while(1)
 219   1              {               
 220   2                       StartModule(); //启动模块测距
 221   2                       while(!RX);            //当RX（ECHO信号回响）为零时等待
 222   2                       TR0=1;                     //开启计数
 223   2                       while(RX);                     //当RX为1计数并等待
 224   2                       TR0=0;                         //关闭计数
 225   2                   Conut();                   //计算距离
 226   2                       Avoid();                       //避障
 227   2                       for(i=0; i<1800; i++)  //超声波每次测距间隔不低于65ms
 228   2                              tracking();     //寻迹  
 229   2              }
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    423    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.00   MAIN                                                                  07/26/2019 16:01:17 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
